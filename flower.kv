#:import random random
#:import os os
#:import tr __main__.tr

<BackgroundColor@Widget>
    background_color: 1, 1, 1, 1
    canvas.before:
        Color:
            rgba: root.background_color
        Rectangle:
            size: self.size
            pos: self.pos

<BackgroundLabel@Label+BackgroundColor>
    background_color: .4, .4, .3, 1

<MenuButton@Button>
    background_color: 0, 0, 0, 0.5

<BackgroundScreen@Screen>:
    canvas.before:
        Color:
            rgb: 1, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size
            texture: app.texture

<MenuScreen>:
    BoxLayout:
        orientation: 'vertical'
        size_hint: (.5, 1)
        padding: 128
        spacing: 32
        BoxLayout:
            orientation: 'horizontal'
            spacing: 32
            size_hint: (1, 2)
            Button:
                background_normal: 'data/images/ru.png'
                on_press:
                    app.lang = 'ru'
            Button:
                background_normal: 'data/images/en.png'
                on_press:
                    app.lang = 'en'
        Label:
            color: 0, .5, 0
            font_size: '32sp'
            text: tr._('The Flower')
        MenuButton:
            text: tr._('Start')
            on_press:
                root.manager.transition.direction = 'left'
                root.manager.current = 'start'
        MenuButton:
            text: tr._("Hall of Fame")
            on_press:
                root.manager.transition.direction = 'left'
                root.manager.current = 'hall_of_fame'
        MenuButton:
            text: tr._('Settings')
            on_press:
                app.open_settings()
        MenuButton:
            text: tr._('About')
            on_press:
                root.manager.transition.direction = 'left'
                root.manager.current = 'about'
        MenuButton:
            text: tr._('Exit')
            on_press:
                app.stop()
    Label:
        size_hint: (.1, .1)
        color: 0, 0, 0
        text: 'v.0.92'

<StartScreen>:
    BoxLayout:
        orientation: 'vertical'
        size_hint: (.5, 1)
        padding: 128
        spacing: 32
        Label:
            color: 0, .5, 0
            font_size: '16sp'
            text: tr._("It is recommended to try first with a healthy eye\nto have results you can keep as a goal for a lazy eye.")
        Label:
            color: 0, .5, 0
            font_size: '16sp'
            text: tr._("Enter your name:")
        TextInput:
            id: username
            text: os.getenv('USER', 'Neznayka')
            size_hint: (1, .5)
            multiline: False
        Label:
            color: 0, .5, 0
            font_size: '16sp'
            text: tr._("Choose training condition:")
        Spinner:
            id: condition
            background_color: 0, 0, 0, 0.5
            text: tr._('Both eyes')
            values: tr._('Both eyes'), tr._('Left eye'), tr._('Right eye')
        MenuButton:
            text: tr._('Start')
            on_press:
                app.username = username.text
                app.condition = condition.text
                root.manager.transition.direction = 'left'
                root.manager.current = 'flower'

<HallOfFameScreen>:
    BoxLayout:
        orientation: 'vertical'
        Button:
            text: tr._("Hall of Fame")
            size_hint: (1, .1)
        GridLayout:
            id: hall_of_fame
            row_default_height: 64
            cols_minimum: {0:64, 1:256, 2:256}
            cols: 3
            rows: 10
        Button:
            text: tr._("Back to menu")
            size_hint: (1, .1)
            on_press:
                root.manager.transition.direction = 'right'
                root.manager.current = 'menu'

<AboutScreen>:
    Label:
        color: 0, .5, 0
        font_size: '16sp'
        text: tr._("About the program")
    Button:
        text: tr._("Back to menu")
        size_hint: (1, .1)
        on_press:
            root.manager.transition.direction = 'right'
            root.manager.current = 'menu'

<CongratsScreen>:
    BoxLayout:
        orientation: 'vertical'
        Label:
            color: 0, .5, 0
            font_size: '32sp'
            text: tr._("Congratulation, ") + app.username + "!"
        Label:
            color: 0, .5, 0
            font_size: '32sp'
            text: tr._('Your current score is ') + str(app.score)
        Button:
            text: tr._("Next level")
            on_press:
                root.manager.transition.direction = 'left'
                root.manager.current = 'flower'

<ResultsScreen>:
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            orientation: 'vertical'
            id: main
            BackgroundLabel:
                text: tr._('Results of ') + app.username + " (" + app.condition + ")"
                size_hint: (1, .1)
            GridLayout:
                id: results
                cols: 5
                rows: 7
            BoxLayout:
                orientation: 'horizontal'
                size_hint: (1, .1)
                BackgroundLabel:
                    text: tr._("Final score: ") + str(app.score)
                    size_hint: (.5, 1)
                BackgroundLabel:
                    id: k1
                    text: ''
                BackgroundLabel:
                    id: k2
                    text: ''
                BackgroundLabel:
                    id: k3
                    text: ''
        BoxLayout:
            orientation: 'horizontal'
            size_hint: (1, .1)
            Button:
                text: tr._("Save results and return to menu")
                on_press:
                    main.export_to_png(os.path.join("results", app.username + "_results.png"))
                    root.manager.transition.direction = 'right'
                    root.manager.current = 'menu'
            Button:
                text: tr._("Back to menu")
                on_press:
                    root.manager.transition.direction = 'right'
                    root.manager.current = 'menu'

<PetalButton>:
    background_normal: ''
    background_color: 0, 0, 0, 0
    canvas.before:
        Color:
            rgb: (random.choice(self.colors))
        Ellipse:
            pos: root.pos
            size: root.size[0] * 1.4, root.size[1] * 1.4

<Timer>:
    pos_hint: {'x': .97}
    background_color: 0, 0, 0, 0
    canvas:
        Color:
            rgb: (0, 1, 0)
        Rectangle:
            pos: self.pos
            size: (self.size[0]*.05, self.size[1])

<Score>:
    pos_hint: {'top': 1.4, 'right': 1.4}
    color: 0, .5, 0
    font_size: '32sp'
