#:import random random
#:import os os

<BackgroundColor@Widget>
    background_color: 1, 1, 1, 1
    canvas.before:
        Color:
            rgba: root.background_color
        Rectangle:
            size: self.size
            pos: self.pos

<BackgroundLabel@Label+BackgroundColor>
    background_color: .4, .4, .3, 1

<MenuScreen>:
    BoxLayout:
        orientation: 'vertical'
        size_hint: (.5, 1)
        padding: 128
        spacing: 48
        Label:
            text: 'The Flower'
        TextInput:
            id: username
            text: os.getenv('USER', 'username')
            multiline: False
        Button:
            text: 'Start'
            on_press:
                app.username = username.text
                root.manager.transition.direction = 'left'
                root.manager.current = 'flower'
        Button:
            text: "Hall of Fame"
            on_press:
                root.manager.transition.direction = 'left'
                root.manager.current = 'hall_of_fame'
        Button:
            text: 'Settings'
            on_press:
                app.open_settings()
        Button:
            text: 'About'
        Button:
            text: 'Exit'
            on_press:
                app.stop()

<HallOfFameScreen>:
    BoxLayout:
        orientation: 'vertical'
        Button:
            text: "Hall of Fame"
            size_hint: (1, .1)
        GridLayout:
            id: hall_of_fame
            row_default_height: 64
            cols_minimum: {0:64, 1:256, 2:256}
            cols: 3
            rows: 10
        Button:
            text: "Back to menu"
            size_hint: (1, .1)
            on_press:
                root.manager.transition.direction = 'right'
                root.manager.current = 'menu'

<CongratsScreen>:
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: "Congratulation, {}!".format(app.username)
        Label:
            text:
                'Your current score is ' + str(app.score)
        Button:
            text: "Next level"
            on_press:
                root.manager.transition.direction = 'left'
                root.manager.current = 'flower'

<ResultsScreen>:
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            orientation: 'vertical'
            id: main
            BackgroundLabel:
                text: 'Results of ' + app.username
                size_hint: (1, .1)
            GridLayout:
                id: results
                cols: 5
                rows: 7
            BoxLayout:
                orientation: 'horizontal'
                size_hint: (1, .1)
                BackgroundLabel:
                    text: "Final score: " + str(app.score)
                    size_hint: (.5, 1)
                BackgroundLabel:
                    id: k1
                    text: ''
                BackgroundLabel:
                    id: k2
                    text: ''
                BackgroundLabel:
                    id: k3
                    text: ''
        BoxLayout:
            orientation: 'horizontal'
            size_hint: (1, .1)
            Button:
                text: "Save results and return to menu"
                on_press:
                    main.export_to_png(os.path.join("results", app.username + "_results.png"))
                    root.manager.transition.direction = 'right'
                    root.manager.current = 'menu'
            Button:
                text: "Back to menu"
                on_press:
                    root.manager.transition.direction = 'right'
                    root.manager.current = 'menu'

<PetalButton>:
    background_normal: ''
    background_color: 0, 0, 0, 0
    canvas.before:
        Color:
            rgb: (random.random(), random.random(), random.random())
        Ellipse:
            pos: root.pos
            size: root.size[0] * 1.4, root.size[1] * 1.4

<Timer>:
    pos_hint: {'x': .97}
    background_color: 0, 0, 0, 0
    canvas:
        Color:
            rgb: (0, 1, 0)
        Rectangle:
            pos: self.pos
            size: (self.size[0]*.05, self.size[1])

<Score>:
    pos_hint: {'top': 1.4, 'right': 1.4}
